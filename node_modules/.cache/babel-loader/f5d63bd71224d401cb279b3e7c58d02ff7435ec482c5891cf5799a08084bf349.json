{"ast":null,"code":"const filterToMoveTask = (data, title, movingTaskId) => {\n  let moveTask;\n  const newData = data.map(item => {\n    item.issues.map(task => {\n      if (task.id === movingTaskId) {\n        return moveTask = task;\n      }\n    });\n    if (item.title === title) {\n      return Object.assign({\n        ...item\n      }, {\n        issues: item.issues.concat(moveTask)\n      });\n    } else {\n      return Object.assign({\n        ...item\n      }, {\n        issues: item.issues.filter(task => task.id !== movingTaskId)\n      });\n    }\n  });\n  return newData;\n};\nconst addingTaskFunction = (title, newTask, data) => {\n  const nameText = newTask.name.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n  let newAddData;\n  if (nameText === \"\") {\n    newAddData = data;\n  } else {\n    newAddData = data.map(item => {\n      if (item.title === title) {\n        return Object.assign({\n          ...item\n        }, {\n          issues: item.issues.concat(newTask)\n        });\n      }\n      return item;\n    });\n  }\n  return newAddData;\n};\nexport { filterToMoveTask, addingTaskFunction };","map":{"version":3,"names":["filterToMoveTask","data","title","movingTaskId","moveTask","newData","map","item","issues","task","id","Object","assign","concat","filter","addingTaskFunction","newTask","nameText","name","replace","newAddData"],"sources":["C:/Users/andre/Desktop/konban/src/utils.js"],"sourcesContent":["const filterToMoveTask = (data, title, movingTaskId) => {\n  let moveTask;\n  const newData = data.map((item) => {\n    item.issues.map((task) => {\n      if (task.id === movingTaskId) {\n        return (moveTask = task);\n      }\n    });\n    if (item.title === title) {\n      return Object.assign(\n        { ...item },\n        { issues: item.issues.concat(moveTask) }\n      );\n    } else {\n      return Object.assign(\n        { ...item },\n        { issues: item.issues.filter((task) => task.id !== movingTaskId) }\n      );\n    }\n  });\n  return newData;\n};\n\nconst addingTaskFunction = (title, newTask, data) => {\n  const nameText = newTask.name.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n  let newAddData;\n  if (nameText === \"\") {\n    newAddData = data;\n  } else {\n    newAddData = data.map((item) => {\n      if (item.title === title) {\n        return Object.assign(\n          { ...item },\n          { issues: item.issues.concat(newTask) }\n        );\n      }\n      return item;\n    });\n  }\n  return newAddData;\n};\nexport { filterToMoveTask, addingTaskFunction };\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CAACC,IAAI,EAAEC,KAAK,EAAEC,YAAY,KAAK;EACtD,IAAIC,QAAQ;EACZ,MAAMC,OAAO,GAAGJ,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAK;IACjCA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAEG,IAAI,IAAK;MACxB,IAAIA,IAAI,CAACC,EAAE,KAAKP,YAAY,EAAE;QAC5B,OAAQC,QAAQ,GAAGK,IAAI;MACzB;IACF,CAAC,CAAC;IACF,IAAIF,IAAI,CAACL,KAAK,KAAKA,KAAK,EAAE;MACxB,OAAOS,MAAM,CAACC,MAAM,CAClB;QAAE,GAAGL;MAAK,CAAC,EACX;QAAEC,MAAM,EAAED,IAAI,CAACC,MAAM,CAACK,MAAM,CAACT,QAAQ;MAAE,CAAC,CACzC;IACH,CAAC,MAAM;MACL,OAAOO,MAAM,CAACC,MAAM,CAClB;QAAE,GAAGL;MAAK,CAAC,EACX;QAAEC,MAAM,EAAED,IAAI,CAACC,MAAM,CAACM,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,YAAY;MAAE,CAAC,CACnE;IACH;EACF,CAAC,CAAC;EACF,OAAOE,OAAO;AAChB,CAAC;AAED,MAAMU,kBAAkB,GAAG,CAACb,KAAK,EAAEc,OAAO,EAAEf,IAAI,KAAK;EACnD,MAAMgB,QAAQ,GAAGD,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EACrE,IAAIC,UAAU;EACd,IAAIH,QAAQ,KAAK,EAAE,EAAE;IACnBG,UAAU,GAAGnB,IAAI;EACnB,CAAC,MAAM;IACLmB,UAAU,GAAGnB,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAK;MAC9B,IAAIA,IAAI,CAACL,KAAK,KAAKA,KAAK,EAAE;QACxB,OAAOS,MAAM,CAACC,MAAM,CAClB;UAAE,GAAGL;QAAK,CAAC,EACX;UAAEC,MAAM,EAAED,IAAI,CAACC,MAAM,CAACK,MAAM,CAACG,OAAO;QAAE,CAAC,CACxC;MACH;MACA,OAAOT,IAAI;IACb,CAAC,CAAC;EACJ;EACA,OAAOa,UAAU;AACnB,CAAC;AACD,SAASpB,gBAAgB,EAAEe,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}